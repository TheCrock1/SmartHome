// –£–º–µ–Ω –∫–æ–Ω—Ç—Ä–æ–ª –Ω–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∏ –æ—Å–≤–µ—Ç–ª–µ–Ω–∏–µ –∑–∞ —Å—Ç–∞—è
// –ê–≤—Ç–æ—Ä: Arduino –ø—Ä–æ–µ–∫—Ç
// –û–ø–∏—Å–∞–Ω–∏–µ: –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤–µ–Ω—Ç–∏–ª–∞—Ç–æ—Ä –∏ LED —Å–ø–æ—Ä–µ–¥ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∏ —Å–≤–µ—Ç–ª–∏–Ω–∞

// –î–µ—Ñ–∏–Ω–∏—Ü–∏–∏ –Ω–∞ –ø–∏–Ω–æ–≤–µ—Ç–µ
const int TEMP_SENSOR_PIN = A0;    // –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ–Ω —Å–µ–Ω–∑–æ—Ä (TMP36 –∏–ª–∏ LM35)
const int LDR_PIN = A1;            // –§–æ—Ç–æ—Ä–µ–∑–∏—Å—Ç–æ—Ä (LDR)
const int FAN_PIN = 9;             // –í–µ–Ω—Ç–∏–ª–∞—Ç–æ—Ä (PWM –ø–∏–Ω –∑–∞ TIP120)
const int LED_PIN = 6;             // LED –æ—Å–≤–µ—Ç–ª–µ–Ω–∏–µ (PWM –ø–∏–Ω)
const int BUTTON_PIN = 2;          // –ë—É—Ç–æ–Ω –∑–∞ —Ä—ä—á–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
const int BUTTON_FAN_PIN = 3;      // –ë—É—Ç–æ–Ω –∑–∞ —Ä—ä—á–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤–µ–Ω—Ç–∏–ª–∞—Ç–æ—Ä–∞
const int BUTTON_LED_PIN = 4;      // –ë—É—Ç–æ–Ω –∑–∞ —Ä—ä—á–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ LED

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ –∑–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
const float TEMP_THRESHOLD = 28.0;  // –ü—Ä–∞–≥ –∑–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ ¬∞C
const int LIGHT_THRESHOLD = 300;    // –ü—Ä–∞–≥ –∑–∞ —Å–≤–µ—Ç–ª–∏–Ω–∞ (0-1023)
const int FAN_SPEED = 200;          // –°–∫–æ—Ä–æ—Å—Ç –Ω–∞ –≤–µ–Ω—Ç–∏–ª–∞—Ç–æ—Ä–∞ (0-255)
const int LED_BRIGHTNESS = 150;     // –Ø—Ä–∫–æ—Å—Ç –Ω–∞ LED (0-255)

// –ü—Ä–æ–º–µ–Ω–ª–∏–≤–∏ –∑–∞ —Å—ä—Å—Ç–æ—è–Ω–∏–µ
bool fanOn = false;
bool ledOn = false;
bool manualMode = false;
unsigned long lastButtonPress = 0;
const unsigned long DEBOUNCE_DELAY = 50;
int buttonFanState = HIGH;
int lastButtonFanState = HIGH;

int buttonLedState = HIGH;
int lastButtonLedState = HIGH;

unsigned long lastFanButtonPress = 0;
unsigned long lastLedButtonPress = 0;

// –ü—Ä–æ–º–µ–Ω–ª–∏–≤–∏ –∑–∞ —Å–µ–Ω–∑–æ—Ä–∏
float temperature = 0.0;
int lightLevel = 0;
int buttonState = HIGH;
int lastButtonState = HIGH;

void setup() {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ —Å–µ—Ä–∏–π–Ω–∞—Ç–∞ –∫–æ–º—É–Ω–∏–∫–∞—Ü–∏—è
  Serial.begin(9600);
  Serial.println("=== –£–º–µ–Ω –∫–æ–Ω—Ç—Ä–æ–ª –Ω–∞ —Å—Ç–∞—è ===");
  Serial.println("–°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —Å–∏—Å—Ç–µ–º–∞—Ç–∞...");
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ –ø–∏–Ω–æ–≤–µ—Ç–µ
  pinMode(FAN_PIN, OUTPUT);
  pinMode(LED_PIN, OUTPUT);
  pinMode(BUTTON_PIN, INPUT_PULLUP);
  pinMode(BUTTON_FAN_PIN, INPUT_PULLUP);
  pinMode(BUTTON_LED_PIN, INPUT_PULLUP);
  
  // –ü—ä—Ä–≤–æ–Ω–∞—á–∞–ª–Ω–æ –∏–∑–∫–ª—é—á–≤–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  digitalWrite(FAN_PIN, LOW);
  digitalWrite(LED_PIN, LOW);
  
  Serial.println("–°–∏—Å—Ç–µ–º–∞—Ç–∞ –µ –≥–æ—Ç–æ–≤–∞!");
  Serial.println("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ–Ω –ø—Ä–∞–≥: " + String(TEMP_THRESHOLD) + "¬∞C");
  Serial.println("–°–≤–µ—Ç–ª–∏–Ω–µ–Ω –ø—Ä–∞–≥: " + String(LIGHT_THRESHOLD));
  Serial.println("------------------------");
}

void loop() {
  // –ß–µ—Ç–µ–Ω–µ –Ω–∞ —Å–µ–Ω–∑–æ—Ä–∏—Ç–µ
  readSensors();
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±—É—Ç–æ–Ω–∞
  checkButton();
  checkManualControlButtons();
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (–∞–∫–æ –Ω–µ –µ –≤ —Ä—ä—á–µ–Ω —Ä–µ–∂–∏–º)
  if (!manualMode) {
    automaticControl();
  }
  
  // –ü–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  displayStatus();
  
  // –ö—Ä–∞—Ç–∫–∞ –ø–∞—É–∑–∞
  delay(1000);
}

void readSensors() {
  // –ß–µ—Ç–µ–Ω–µ –Ω–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞—Ç–∞
  int tempReading = analogRead(TEMP_SENSOR_PIN);
  
  // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–∞–Ω–µ –∑–∞ TMP36 —Å–µ–Ω–∑–æ—Ä
  // TMP36: 10mV/¬∞C —Å offset 500mV –∑–∞ 0¬∞C
  float voltage = (tempReading * 5.0) / 1024.0;
  temperature = (voltage - 0.5) * 100.0;
  
  // –ß–µ—Ç–µ–Ω–µ –Ω–∞ —Å–≤–µ—Ç–ª–∏–Ω–∞—Ç–∞
  lightLevel = analogRead(LDR_PIN);
}

void checkButton() {
  int reading = digitalRead(BUTTON_PIN);
  
  // Debounce –ª–æ–≥–∏–∫–∞
  if (reading != lastButtonState) {
    lastButtonPress = millis();
  }
  
  if ((millis() - lastButtonPress) > DEBOUNCE_DELAY) {
    if (reading != buttonState) {
      buttonState = reading;
      
      // –ê–∫–æ –±—É—Ç–æ–Ω—ä—Ç –µ –Ω–∞—Ç–∏—Å–Ω–∞—Ç (LOW –∑–∞—Ä–∞–¥–∏ pull-up)
      if (buttonState == LOW) {
        toggleManualMode();
      }
    }
  }
  
  lastButtonState = reading;
}

void checkManualControlButtons() {
  if (manualMode) {
    // --- –í–ï–ù–¢–ò–õ–ê–¢–û–† –ë–£–¢–û–ù ---
    int fanReading = digitalRead(BUTTON_FAN_PIN);
    if (fanReading != lastButtonFanState) {
      lastFanButtonPress = millis();
    }
    if ((millis() - lastFanButtonPress) > DEBOUNCE_DELAY) {
      if (fanReading != buttonFanState) {
        buttonFanState = fanReading;
        if (buttonFanState == LOW) {
          if (fanOn) {
            turnOffFan();
          } else {
            turnOnFan();
          }
        }
      }
    }
    lastButtonFanState = fanReading;

    // --- LED –ë–£–¢–û–ù ---
    int ledReading = digitalRead(BUTTON_LED_PIN);
    if (ledReading != lastButtonLedState) {
      lastLedButtonPress = millis();
    }
    if ((millis() - lastLedButtonPress) > DEBOUNCE_DELAY) {
      if (ledReading != buttonLedState) {
        buttonLedState = ledReading;
        if (buttonLedState == LOW) {
          if (ledOn) {
            turnOffLED();
          } else {
            turnOnLED();
          }
        }
      }
    }
    lastButtonLedState = ledReading;
  }
}

void toggleManualMode() {
  manualMode = !manualMode;
  
  if (manualMode) {
    Serial.println(">>> –†–™–ß–ï–ù –†–ï–ñ–ò–ú –ê–ö–¢–ò–í–ò–†–ê–ù <<<");
    // –ò–∑–∫–ª—é—á–≤–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ —Ä—ä—á–µ–Ω —Ä–µ–∂–∏–º
    turnOffFan();
    turnOffLED();
  } else {
    Serial.println(">>> –ê–í–¢–û–ú–ê–¢–ò–ß–ï–ù –†–ï–ñ–ò–ú –ê–ö–¢–ò–í–ò–†–ê–ù <<<");
  } 
}

void automaticControl() {
  // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤–µ–Ω—Ç–∏–ª–∞—Ç–æ—Ä–∞ —Å–ø–æ—Ä–µ–¥ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞—Ç–∞
  if (temperature > TEMP_THRESHOLD && !fanOn) {
    turnOnFan();
  } else if (temperature <= (TEMP_THRESHOLD - 2.0) && fanOn) {
    // –•–∏—Å—Ç–µ—Ä–µ–∑–∏—Å –æ—Ç 2¬∞C –∑–∞ –∏–∑–±—è–≥–≤–∞–Ω–µ –Ω–∞ —á–µ—Å—Ç–æ –≤–∫–ª—é—á–≤–∞–Ω–µ/–∏–∑–∫–ª—é—á–≤–∞–Ω–µ
    turnOffFan();
  }
  
  // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ LED —Å–ø–æ—Ä–µ–¥ —Å–≤–µ—Ç–ª–∏–Ω–∞—Ç–∞
  if (lightLevel < LIGHT_THRESHOLD && !ledOn) {
    turnOnLED();
  } else if (lightLevel > (LIGHT_THRESHOLD + 50) && ledOn) {
    // –•–∏—Å—Ç–µ—Ä–µ–∑–∏—Å –∑–∞ –∏–∑–±—è–≥–≤–∞–Ω–µ –Ω–∞ –º–∏–≥–∞–Ω–µ
    turnOffLED();
  }
}

void turnOnFan() {
  fanOn = true;
  analogWrite(FAN_PIN, FAN_SPEED);
  Serial.println("üåÄ –í–µ–Ω—Ç–∏–ª–∞—Ç–æ—Ä—ä—Ç –µ –í–ö–õ–Æ–ß–ï–ù");
}

void turnOffFan() {
  fanOn = false;
  analogWrite(FAN_PIN, 0);
  Serial.println("üåÄ –í–µ–Ω—Ç–∏–ª–∞—Ç–æ—Ä—ä—Ç –µ –ò–ó–ö–õ–Æ–ß–ï–ù");
}

void turnOnLED() {
  ledOn = true;
  analogWrite(LED_PIN, LED_BRIGHTNESS);
  Serial.println("üí° LED –æ—Å–≤–µ—Ç–ª–µ–Ω–∏–µ—Ç–æ –µ –í–ö–õ–Æ–ß–ï–ù–û");
}

void turnOffLED() {
  ledOn = false;
  analogWrite(LED_PIN, 0);
  Serial.println("üí° LED –æ—Å–≤–µ—Ç–ª–µ–Ω–∏–µ—Ç–æ –µ –ò–ó–ö–õ–Æ–ß–ï–ù–û");
}

void displayStatus() {
  Serial.println("------------------------");
  Serial.println("–†–µ–∂–∏–º: " + String(manualMode ? "–†–™–ß–ï–ù" : "–ê–í–¢–û–ú–ê–¢–ò–ß–ï–ù"));
  Serial.println("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + String(temperature, 1) + "¬∞C");
  Serial.println("–°–≤–µ—Ç–ª–∏–Ω–∞: " + String(lightLevel) + " (0-1023)");
  Serial.println("–í–µ–Ω—Ç–∏–ª–∞—Ç–æ—Ä: " + String(fanOn ? "–í–ö–õ" : "–ò–ó–ö–õ"));
  Serial.println("LED: " + String(ledOn ? "–í–ö–õ" : "–ò–ó–ö–õ"));
  
  // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
  if (temperature > TEMP_THRESHOLD + 5) {
    Serial.println("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ú–Ω–æ–≥–æ –≤–∏—Å–æ–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞!");
  }
  
  if (lightLevel < 100) {
    Serial.println("üåô –ú–Ω–æ–≥–æ —Ç—ä–º–Ω–æ –≤ –ø–æ–º–µ—â–µ–Ω–∏–µ—Ç–æ");
  }
  
  Serial.println("========================");
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –∫–∞–ª–∏–±—Ä–∏—Ä–∞–Ω–µ –Ω–∞ —Å–µ–Ω–∑–æ—Ä–∏—Ç–µ (–º–æ–∂–µ –¥–∞ —Å–µ –∏–∑–≤–∏–∫–∞ –æ—Ç Serial Monitor)
void calibrateSensors() {
  Serial.println("=== –ö–ê–õ–ò–ë–†–ò–†–ê–ù–ï –ù–ê –°–ï–ù–ó–û–†–ò ===");
  
  int tempSum = 0;
  int lightSum = 0;
  int samples = 10;
  
  for (int i = 0; i < samples; i++) {
    tempSum += analogRead(TEMP_SENSOR_PIN);
    lightSum += analogRead(LDR_PIN);
    delay(100);
  }
  
  int avgTemp = tempSum / samples;
  int avgLight = lightSum / samples;
  
  Serial.println("–°—Ä–µ–¥–Ω–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + String(avgTemp));
  Serial.println("–°—Ä–µ–¥–Ω–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç —Å–≤–µ—Ç–ª–∏–Ω–∞: " + String(avgLight));
  Serial.println("===============================");
}